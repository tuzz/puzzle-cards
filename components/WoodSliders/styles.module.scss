.wood_sliders {
  position: absolute;
  top: -0.7rem;
  width: 100%;
  height: 24.2rem;
}

.left, .right {
  position: absolute;
  width: 50%;
  height: 22.8rem;

  border-top: 0.7rem solid #38261b;
  border-bottom: 0.7rem solid #38261b;

  background-color: #724a2f;
  background-image: url("/images/wood.jpeg");
  background-repeat: none;
  background-size: cover;

  box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.5);
  z-index: 99998;

  transition: left 0.5s ease-in, right 0.5s ease-in;

  display: flex;
  align-items: center;
}

.hourglass {
  position: absolute;
  width: 4.5rem;
  height: 4.5rem;
  margin: 0.25rem;

  background-color: rgba(255, 255, 255, 0.25);
  background-image: url("/images/crossed_hourglass.png");
  background-repeat: no-repeat;
  background-size: 90%;
  background-position: center;
  border: 2px solid #38261b;
  border-radius: 50%;
  cursor: pointer;
  box-shadow: inset 0 -0.1rem 0.2rem rgb(0, 0, 0, 0.5);
  transition: background-color 250ms linear;

  &:hover {
    background-color: rgba(255, 255, 255, 0.5);
  }

  &:disabled {
    background-color: rgba(255, 255, 255, 0.5);
    background-image: url("/images/hourglass.png");

    animation-name: spin-counter-clockwise;
    animation-duration: 2000ms;
    animation-iteration-count: 1;
    animation-timing-function: linear;
  }
}

.left {
  transform: scaleX(-1);

  .hourglass:disabled {
    animation-name: spin-clockwise;
  }
}

:global(.initial_state) .hourglass:disabled {
  background-color: rgba(255, 255, 255, 0.25);
  background-image: url("/images/crossed_hourglass.png");
  animation-name: none;
  cursor: not-allowed;
}

:global(.initial_state) .left { left: calc(-50% + 5rem); }
:global(.initial_state) .right { right: calc(-50% + 5rem); }

:global(.close_both_state) .left { left: 0; }
:global(.close_both_state) .right { right: 0; }

:global(.open_both_state) .left { left: calc(-50% + 5rem); }
:global(.open_both_state) .right { right: calc(-50% + 5rem); }

:global(.open_left_first_state) .left { left: calc(-50% + 5rem); }
:global(.open_left_first_state) .right { right: 0 }

:global(.open_right_first_state) .left { left: 0 }
:global(.open_right_first_state) .right { right: calc(-50% + 5rem); }

:global(.open_left_second_state) .left { left: calc(-50% + 5rem); }
:global(.open_left_second_state) .right { right: calc(-50% + 5rem); }

:global(.open_right_second_state) .left { left: calc(-50% + 5rem); }
:global(.open_right_second_state) .right { right: calc(-50% + 5rem); }

@keyframes spin-counter-clockwise {
  from { transform: rotate(0deg); }
  to { transform: rotate(-180deg); }
}

@keyframes spin-clockwise {
  from { transform: rotate(0deg); }
  to { transform: rotate(180deg); }
}
